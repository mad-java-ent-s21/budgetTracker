[DEBUG] 2021-05-04 17:30:48.857 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-05-04 17:30:48.858 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-05-04 17:30:48.864 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-05-04 17:30:48.924 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-05-04 17:30:48.928 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-05-04 17:30:49.111 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-05-04 17:30:49.113 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-05-04 17:30:49.119 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-05-04 17:30:49.372 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-05-04 17:30:49.395 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-05-04 17:30:49.395 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-05-04 17:30:49.413 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-05-04 17:30:49.444 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@cbc8d0f
[DEBUG] 2021-05-04 17:30:49.445 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@cbc8d0f
[DEBUG] 2021-05-04 17:30:49.445 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@cbc8d0f
[DEBUG] 2021-05-04 17:30:49.445 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6794ac0b
[DEBUG] 2021-05-04 17:30:49.445 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5580d62f
[DEBUG] 2021-05-04 17:30:49.445 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@154bd49b
[DEBUG] 2021-05-04 17:30:49.446 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@472698d
[DEBUG] 2021-05-04 17:30:49.446 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@472698d
[DEBUG] 2021-05-04 17:30:49.446 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@472698d
[DEBUG] 2021-05-04 17:30:49.448 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@cf67838
[DEBUG] 2021-05-04 17:30:49.448 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@cf67838
[DEBUG] 2021-05-04 17:30:49.448 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@cf67838
[DEBUG] 2021-05-04 17:30:49.449 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@499ef98e
[DEBUG] 2021-05-04 17:30:49.449 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@499ef98e
[DEBUG] 2021-05-04 17:30:49.449 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@499ef98e
[DEBUG] 2021-05-04 17:30:49.452 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@639aba11
[DEBUG] 2021-05-04 17:30:49.452 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@639aba11
[DEBUG] 2021-05-04 17:30:49.452 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@639aba11
[DEBUG] 2021-05-04 17:30:49.453 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@34f392be
[DEBUG] 2021-05-04 17:30:49.453 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@34f392be
[DEBUG] 2021-05-04 17:30:49.453 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@34f392be
[DEBUG] 2021-05-04 17:30:49.454 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@523d6bdb
[DEBUG] 2021-05-04 17:30:49.454 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@523d6bdb
[DEBUG] 2021-05-04 17:30:49.454 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@523d6bdb
[DEBUG] 2021-05-04 17:30:49.455 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2cfa2c4f
[DEBUG] 2021-05-04 17:30:49.455 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2cfa2c4f
[DEBUG] 2021-05-04 17:30:49.456 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2cfa2c4f
[DEBUG] 2021-05-04 17:30:49.456 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e2a3040
[DEBUG] 2021-05-04 17:30:49.456 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e2a3040
[DEBUG] 2021-05-04 17:30:49.456 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5bb51241
[DEBUG] 2021-05-04 17:30:49.460 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5bb51241
[DEBUG] 2021-05-04 17:30:49.460 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6c42f2a1
[DEBUG] 2021-05-04 17:30:49.460 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6c42f2a1
[DEBUG] 2021-05-04 17:30:49.460 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1aa6e3c0
[DEBUG] 2021-05-04 17:30:49.461 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@65f2f9b0
[DEBUG] 2021-05-04 17:30:49.461 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@38fc5554
[DEBUG] 2021-05-04 17:30:49.461 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@38fc5554
[DEBUG] 2021-05-04 17:30:49.462 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4d1f1ff5
[DEBUG] 2021-05-04 17:30:49.462 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4d1f1ff5
[DEBUG] 2021-05-04 17:30:49.473 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2184b4f4
[DEBUG] 2021-05-04 17:30:49.473 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2184b4f4
[DEBUG] 2021-05-04 17:30:49.474 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35764bef
[DEBUG] 2021-05-04 17:30:49.474 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35764bef
[DEBUG] 2021-05-04 17:30:49.474 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@778d82e9
[DEBUG] 2021-05-04 17:30:49.474 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@778d82e9
[DEBUG] 2021-05-04 17:30:49.476 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@10cd6753
[DEBUG] 2021-05-04 17:30:49.476 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@10cd6753
[DEBUG] 2021-05-04 17:30:49.477 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@260ff5b7
[DEBUG] 2021-05-04 17:30:49.477 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@260ff5b7
[DEBUG] 2021-05-04 17:30:49.480 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58860997
[DEBUG] 2021-05-04 17:30:49.480 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58860997
[DEBUG] 2021-05-04 17:30:49.481 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3e17a0a1
[DEBUG] 2021-05-04 17:30:49.483 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3e17a0a1
[DEBUG] 2021-05-04 17:30:49.484 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@524a2ffb
[DEBUG] 2021-05-04 17:30:49.484 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@524a2ffb
[DEBUG] 2021-05-04 17:30:49.485 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1416cf9f
[DEBUG] 2021-05-04 17:30:49.485 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1416cf9f
[DEBUG] 2021-05-04 17:30:49.485 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@a518813
[DEBUG] 2021-05-04 17:30:49.485 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a518813
[DEBUG] 2021-05-04 17:30:49.486 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a518813
[DEBUG] 2021-05-04 17:30:49.486 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ba7383d
[DEBUG] 2021-05-04 17:30:49.489 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5e048149
[DEBUG] 2021-05-04 17:30:49.491 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5e048149
[DEBUG] 2021-05-04 17:30:49.492 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5e048149
[DEBUG] 2021-05-04 17:30:49.492 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@57402ba1
[DEBUG] 2021-05-04 17:30:49.493 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@62573c86
[DEBUG] 2021-05-04 17:30:49.494 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@62573c86
[DEBUG] 2021-05-04 17:30:49.495 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3936df72
[DEBUG] 2021-05-04 17:30:49.495 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3936df72
[DEBUG] 2021-05-04 17:30:49.496 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ce53f6a
[DEBUG] 2021-05-04 17:30:49.496 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ce53f6a
[DEBUG] 2021-05-04 17:30:49.497 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@60859f5a
[DEBUG] 2021-05-04 17:30:49.499 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60859f5a
[DEBUG] 2021-05-04 17:30:49.500 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18acfe88
[DEBUG] 2021-05-04 17:30:49.500 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18acfe88
[DEBUG] 2021-05-04 17:30:49.500 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@19962194
[DEBUG] 2021-05-04 17:30:49.503 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@383864d5
[DEBUG] 2021-05-04 17:30:49.503 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@383864d5
[DEBUG] 2021-05-04 17:30:49.503 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@383864d5
[DEBUG] 2021-05-04 17:30:49.503 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65c86db8
[DEBUG] 2021-05-04 17:30:49.503 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65c86db8
[DEBUG] 2021-05-04 17:30:49.503 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65c86db8
[DEBUG] 2021-05-04 17:30:49.508 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6f139fc9
[DEBUG] 2021-05-04 17:30:49.508 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@15dc339f
[DEBUG] 2021-05-04 17:30:49.509 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@76889e60
[DEBUG] 2021-05-04 17:30:49.509 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@76889e60
[DEBUG] 2021-05-04 17:30:49.509 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@76889e60
[DEBUG] 2021-05-04 17:30:49.509 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e104d4b
[DEBUG] 2021-05-04 17:30:49.509 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e104d4b
[DEBUG] 2021-05-04 17:30:49.510 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e104d4b
[DEBUG] 2021-05-04 17:30:49.510 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e807c54
[DEBUG] 2021-05-04 17:30:49.511 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2b8bd798
[DEBUG] 2021-05-04 17:30:49.525 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@44550792
[DEBUG] 2021-05-04 17:30:49.526 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@44550792
[DEBUG] 2021-05-04 17:30:49.526 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@aa4d8cc
[DEBUG] 2021-05-04 17:30:49.530 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@2e51d054
[DEBUG] 2021-05-04 17:30:49.530 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2e51d054
[DEBUG] 2021-05-04 17:30:49.532 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@49fe3142
[DEBUG] 2021-05-04 17:30:49.533 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@49fe3142
[DEBUG] 2021-05-04 17:30:49.534 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a565cbd
[DEBUG] 2021-05-04 17:30:49.534 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7569ea63
[DEBUG] 2021-05-04 17:30:49.534 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2042ccce
[DEBUG] 2021-05-04 17:30:49.537 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@74d3b638
[DEBUG] 2021-05-04 17:30:49.537 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@74d3b638
[DEBUG] 2021-05-04 17:30:49.538 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@53830483
[DEBUG] 2021-05-04 17:30:49.538 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29f85fe1
[DEBUG] 2021-05-04 17:30:49.544 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43a0a32d
[DEBUG] 2021-05-04 17:30:49.544 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@396ef8b2
[DEBUG] 2021-05-04 17:30:49.544 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@72825400
[DEBUG] 2021-05-04 17:30:49.544 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19ee1ae6
[DEBUG] 2021-05-04 17:30:49.544 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f117b3d
[DEBUG] 2021-05-04 17:30:49.545 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1174a305
[DEBUG] 2021-05-04 17:30:49.587 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-05-04 17:30:49.587 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-05-04 17:30:49.588 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-04 17:30:49.588 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-05-04 17:30:49.589 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-05-04 17:30:49.589 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-05-04 17:30:49.589 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-05-04 17:30:49.590 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-04 17:30:49.590 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-05-04 17:30:49.591 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-05-04 17:30:49.591 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-05-04 17:30:49.591 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-05-04 17:30:49.591 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-05-04 17:30:49.591 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-05-04 17:30:49.596 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/budget_tracker
[INFO ] 2021-05-04 17:30:49.596 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-05-04 17:30:49.600 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-05-04 17:30:49.740 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-05-04 17:30:49.890 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-05-04 17:30:49.894 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-05-04 17:30:49.894 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-05-04 17:30:49.938 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-05-04 17:30:49.959 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-05-04 17:30:49.990 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-05-04 17:30:50.040 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-05-04 17:30:50.044 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58015e56] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d3c6593]
[DEBUG] 2021-05-04 17:30:50.098 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Category
[DEBUG] 2021-05-04 17:30:50.124 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-04 17:30:50.129 [main] EntityBinder - Import with entity name Category
[DEBUG] 2021-05-04 17:30:50.130 [main] EntityBinder - Bind entity edu.matc.entity.Category on table category
[DEBUG] 2021-05-04 17:30:50.163 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(category), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.167 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-04 17:30:50.170 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Category:id]
[DEBUG] 2021-05-04 17:30:50.171 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-04 17:30:50.177 [main] PropertyBinder - Building property id
[DEBUG] 2021-05-04 17:30:50.179 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-04 17:30:50.179 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(category), mappingColumn=category_description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.180 [main] PropertyBinder - MetadataSourceProcessor property categoryDescription with lazy=false
[DEBUG] 2021-05-04 17:30:50.180 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Category:categoryDescription]
[DEBUG] 2021-05-04 17:30:50.180 [main] SimpleValueBinder - building SimpleValue for categoryDescription
[DEBUG] 2021-05-04 17:30:50.180 [main] PropertyBinder - Building property categoryDescription
[DEBUG] 2021-05-04 17:30:50.181 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(category), mappingColumn=category_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.181 [main] PropertyBinder - MetadataSourceProcessor property categoryName with lazy=false
[DEBUG] 2021-05-04 17:30:50.181 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Category:categoryName]
[DEBUG] 2021-05-04 17:30:50.181 [main] SimpleValueBinder - building SimpleValue for categoryName
[DEBUG] 2021-05-04 17:30:50.181 [main] PropertyBinder - Building property categoryName
[DEBUG] 2021-05-04 17:30:50.183 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(category), mappingColumn=color, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.183 [main] PropertyBinder - MetadataSourceProcessor property color with lazy=false
[DEBUG] 2021-05-04 17:30:50.184 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Category:color]
[DEBUG] 2021-05-04 17:30:50.184 [main] SimpleValueBinder - building SimpleValue for color
[DEBUG] 2021-05-04 17:30:50.184 [main] PropertyBinder - Building property color
[DEBUG] 2021-05-04 17:30:50.185 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='id', mappedBy=''}
[DEBUG] 2021-05-04 17:30:50.185 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(category), mappingColumn=userId, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.193 [main] PropertyBinder - Building property userId
[DEBUG] 2021-05-04 17:30:50.193 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.Entry
[DEBUG] 2021-05-04 17:30:50.194 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-04 17:30:50.194 [main] EntityBinder - Import with entity name Entry
[DEBUG] 2021-05-04 17:30:50.194 [main] EntityBinder - Bind entity edu.matc.entity.Entry on table entry
[DEBUG] 2021-05-04 17:30:50.197 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entry), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.197 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-04 17:30:50.197 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Entry:id]
[DEBUG] 2021-05-04 17:30:50.197 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-04 17:30:50.197 [main] PropertyBinder - Building property id
[DEBUG] 2021-05-04 17:30:50.197 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-04 17:30:50.197 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='category_id', referencedColumn='id', mappedBy=''}
[DEBUG] 2021-05-04 17:30:50.197 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entry), mappingColumn=categoryId, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.197 [main] PropertyBinder - Building property categoryId
[DEBUG] 2021-05-04 17:30:50.198 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entry), mappingColumn=date, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.198 [main] PropertyBinder - MetadataSourceProcessor property date with lazy=false
[DEBUG] 2021-05-04 17:30:50.198 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Entry:date]
[DEBUG] 2021-05-04 17:30:50.198 [main] SimpleValueBinder - building SimpleValue for date
[DEBUG] 2021-05-04 17:30:50.198 [main] PropertyBinder - Building property date
[DEBUG] 2021-05-04 17:30:50.198 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entry), mappingColumn=entry_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.198 [main] PropertyBinder - MetadataSourceProcessor property entryName with lazy=false
[DEBUG] 2021-05-04 17:30:50.198 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Entry:entryName]
[DEBUG] 2021-05-04 17:30:50.198 [main] SimpleValueBinder - building SimpleValue for entryName
[DEBUG] 2021-05-04 17:30:50.199 [main] PropertyBinder - Building property entryName
[DEBUG] 2021-05-04 17:30:50.199 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entry), mappingColumn=entry_type, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.199 [main] PropertyBinder - MetadataSourceProcessor property entryType with lazy=false
[DEBUG] 2021-05-04 17:30:50.199 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Entry:entryType]
[DEBUG] 2021-05-04 17:30:50.199 [main] SimpleValueBinder - building SimpleValue for entryType
[DEBUG] 2021-05-04 17:30:50.199 [main] PropertyBinder - Building property entryType
[DEBUG] 2021-05-04 17:30:50.199 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='id', mappedBy=''}
[DEBUG] 2021-05-04 17:30:50.199 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entry), mappingColumn=userId, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.199 [main] PropertyBinder - Building property userId
[DEBUG] 2021-05-04 17:30:50.199 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(entry), mappingColumn=value, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.199 [main] PropertyBinder - MetadataSourceProcessor property value with lazy=false
[DEBUG] 2021-05-04 17:30:50.200 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.Entry:value]
[DEBUG] 2021-05-04 17:30:50.202 [main] SimpleValueBinder - building SimpleValue for value
[DEBUG] 2021-05-04 17:30:50.202 [main] PropertyBinder - Building property value
[DEBUG] 2021-05-04 17:30:50.202 [main] AnnotationBinder - Binding entity from annotated class: edu.matc.entity.User
[DEBUG] 2021-05-04 17:30:50.202 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-05-04 17:30:50.202 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-05-04 17:30:50.202 [main] EntityBinder - Bind entity edu.matc.entity.User on table user
[DEBUG] 2021-05-04 17:30:50.205 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.205 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-05-04 17:30:50.205 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:id]
[DEBUG] 2021-05-04 17:30:50.205 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-05-04 17:30:50.205 [main] PropertyBinder - Building property id
[DEBUG] 2021-05-04 17:30:50.205 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-05-04 17:30:50.205 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=birthdate, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.206 [main] PropertyBinder - MetadataSourceProcessor property birthdate with lazy=false
[DEBUG] 2021-05-04 17:30:50.206 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:birthdate]
[DEBUG] 2021-05-04 17:30:50.206 [main] SimpleValueBinder - building SimpleValue for birthdate
[DEBUG] 2021-05-04 17:30:50.206 [main] PropertyBinder - Building property birthdate
[DEBUG] 2021-05-04 17:30:50.206 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=email, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.207 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2021-05-04 17:30:50.207 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:email]
[DEBUG] 2021-05-04 17:30:50.207 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2021-05-04 17:30:50.207 [main] PropertyBinder - Building property email
[DEBUG] 2021-05-04 17:30:50.207 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.207 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-05-04 17:30:50.207 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:firstName]
[DEBUG] 2021-05-04 17:30:50.208 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-05-04 17:30:50.208 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-05-04 17:30:50.208 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.208 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-05-04 17:30:50.208 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:lastName]
[DEBUG] 2021-05-04 17:30:50.208 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-05-04 17:30:50.208 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-05-04 17:30:50.208 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.208 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-05-04 17:30:50.208 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:password]
[DEBUG] 2021-05-04 17:30:50.211 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-05-04 17:30:50.211 [main] PropertyBinder - Building property password
[DEBUG] 2021-05-04 17:30:50.211 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-05-04 17:30:50.211 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-05-04 17:30:50.212 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [edu.matc.entity.User:userName]
[DEBUG] 2021-05-04 17:30:50.212 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-05-04 17:30:50.213 [main] PropertyBinder - Building property userName
[DEBUG] 2021-05-04 17:30:50.218 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-04 17:30:50.220 [main] SimpleValueBinder - Starting fillSimpleValue for categoryDescription
[DEBUG] 2021-05-04 17:30:50.220 [main] SimpleValueBinder - Starting fillSimpleValue for categoryName
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for color
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for date
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for entryName
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for entryType
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for value
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for birthdate
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-05-04 17:30:50.221 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-05-04 17:30:50.223 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [category]
[DEBUG] 2021-05-04 17:30:50.223 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [entry]
[DEBUG] 2021-05-04 17:30:50.223 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-05-04 17:30:50.223 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2021-05-04 17:30:50.224 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.Category
[DEBUG] 2021-05-04 17:30:50.224 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2021-05-04 17:30:50.229 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2021-05-04 17:30:50.229 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.Category
[DEBUG] 2021-05-04 17:30:50.229 [main] InFlightMetadataCollectorImpl - Resolving reference to class: edu.matc.entity.User
[DEBUG] 2021-05-04 17:30:50.265 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-05-04 17:30:50.265 [main] Settings - SessionFactory name : null
[DEBUG] 2021-05-04 17:30:50.265 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-05-04 17:30:50.265 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-05-04 17:30:50.265 [main] Settings - Statistics: disabled
[DEBUG] 2021-05-04 17:30:50.265 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-05-04 17:30:50.265 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-05-04 17:30:50.265 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-05-04 17:30:50.265 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-05-04 17:30:50.265 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Named query checking : enabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-05-04 17:30:50.266 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-05-04 17:30:50.321 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-05-04 17:30:50.335 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-05-04 17:30:50.336 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/budgetTracker/target/test-classes:/home/student/IdeaProjects/budgetTracker/target/classes:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-client/2.29.1/jersey-client-2.29.1.jar:/home/student/.m2/repository/jakarta/ws/rs/jakarta.ws.rs-api/2.1.6/jakarta.ws.rs-api-2.1.6.jar:/home/student/.m2/repository/org/glassfish/jersey/core/jersey-common/2.29.1/jersey-common-2.29.1.jar:/home/student/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/student/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.3/osgi-resource-locator-1.0.3.jar:/home/student/.m2/repository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/jakarta.inject/2.6.1/jakarta.inject-2.6.1.jar:/home/student/.m2/repository/org/glassfish/jersey/inject/jersey-hk2/2.29.1/jersey-hk2-2.29.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-locator/2.6.1/hk2-locator-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.6.1/aopalliance-repackaged-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-api/2.6.1/hk2-api-2.6.1.jar:/home/student/.m2/repository/org/glassfish/hk2/hk2-utils/2.6.1/hk2-utils-2.6.1.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.0/jackson-core-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.0/jackson-annotations-2.10.0.jar:/home/student/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.0/jackson-databind-2.10.0.jar:/home/student/.m2/repository/com/google/apis/google-api-services-driveactivity/v2-rev20210319-1.31.0/google-api-services-driveactivity-v2-rev20210319-1.31.0.jar:/home/student/.m2/repository/com/google/api-client/google-api-client/1.31.1/google-api-client-1.31.1.jar:/home/student/.m2/repository/com/google/oauth-client/google-oauth-client/1.31.2/google-oauth-client-1.31.2.jar:/home/student/.m2/repository/com/google/http-client/google-http-client/1.38.0/google-http-client-1.38.0.jar:/home/student/.m2/repository/io/opencensus/opencensus-api/0.24.0/opencensus-api-0.24.0.jar:/home/student/.m2/repository/io/grpc/grpc-context/1.22.1/grpc-context-1.22.1.jar:/home/student/.m2/repository/io/opencensus/opencensus-contrib-http-util/0.24.0/opencensus-contrib-http-util-0.24.0.jar:/home/student/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/student/.m2/repository/com/google/http-client/google-http-client-jackson2/1.38.0/google-http-client-jackson2-1.38.0.jar:/home/student/.m2/repository/com/google/guava/guava/29.0-android/guava-29.0-android.jar:/home/student/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/home/student/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/student/.m2/repository/org/checkerframework/checker-compat-qual/2.5.5/checker-compat-qual-2.5.5.jar:/home/student/.m2/repository/com/google/errorprone/error_prone_annotations/2.3.4/error_prone_annotations-2.3.4.jar:/home/student/.m2/repository/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/home/student/.m2/repository/com/google/http-client/google-http-client-apache-v2/1.38.0/google-http-client-apache-v2-1.38.0.jar:/home/student/.m2/repository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar:/home/student/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/home/student/.m2/repository/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:/home/student/.m2/repository/org/apache/httpcomponents/httpcore/4.4.13/httpcore-4.4.13.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 edu.matc.persistence.UserDaoTest, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-72-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/budget_tracker, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.11, user.dir=/home/student/IdeaProjects/budgetTracker, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@53940e2f, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/budget_tracker, java.class.version=55.0}
[DEBUG] 2021-05-04 17:30:50.392 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-05-04 17:30:50.392 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-05-04 17:30:50.392 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-05-04 17:30:50.393 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58015e56] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7ca16adc]
[DEBUG] 2021-05-04 17:30:50.441 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2021-05-04 17:30:50.445 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2021-05-04 17:30:50.462 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.User] is safe
[DEBUG] 2021-05-04 17:30:50.462 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.User
[DEBUG] 2021-05-04 17:30:50.696 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Category] is safe
[DEBUG] 2021-05-04 17:30:50.698 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Category
[DEBUG] 2021-05-04 17:30:50.699 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Category] is safe
[DEBUG] 2021-05-04 17:30:50.700 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Category
[DEBUG] 2021-05-04 17:30:50.721 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Entry] is safe
[DEBUG] 2021-05-04 17:30:50.721 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Entry
[DEBUG] 2021-05-04 17:30:50.721 [main] ClassLoaderAccessImpl - Not known whether passed class name [edu.matc.entity.Entry] is safe
[DEBUG] 2021-05-04 17:30:50.721 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.matc.entity.Entry
[DEBUG] 2021-05-04 17:30:50.765 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.User
[DEBUG] 2021-05-04 17:30:50.765 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-05-04 17:30:50.765 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.birthdate as birthdat2_2_, user_.email as email3_2_, user_.first_name as first_na4_2_, user_.last_name as last_nam5_2_, user_.password as password6_2_, user_.username as username7_2_ from user user_ where user_.id=?
[DEBUG] 2021-05-04 17:30:50.765 [main] AbstractEntityPersister -  Insert 0: insert into user (birthdate, email, first_name, last_name, password, username, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:50.768 [main] AbstractEntityPersister -  Update 0: update user set birthdate=?, email=?, first_name=?, last_name=?, password=?, username=? where id=?
[DEBUG] 2021-05-04 17:30:50.768 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-05-04 17:30:50.768 [main] AbstractEntityPersister -  Identity insert: insert into user (birthdate, email, first_name, last_name, password, username) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:50.786 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c48cede]
[DEBUG] 2021-05-04 17:30:50.786 [main] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2021-05-04 17:30:50.787 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-04 17:30:50.787 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-04 17:30:50.787 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-04 17:30:50.787 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-04 17:30:50.787 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-04 17:30:50.787 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-04 17:30:50.798 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-04 17:30:50.800 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-04 17:30:50.802 [main] EntityLoader - Static select for entity edu.matc.entity.User [NONE]: select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:50.807 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48499739]
[DEBUG] 2021-05-04 17:30:50.807 [main] MetamodelGraphWalker - Visiting attribute path : birthdate
[DEBUG] 2021-05-04 17:30:50.807 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2021-05-04 17:30:50.807 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-05-04 17:30:50.807 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-05-04 17:30:50.807 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-05-04 17:30:50.807 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-05-04 17:30:50.807 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-04 17:30:50.807 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-04 17:30:50.807 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.User)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:0>, path=edu.matc.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] 2021-05-04 17:30:50.808 [main] EntityLoader - Static select for entity edu.matc.entity.User [READ]: select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:50.818 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.User: select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:50.818 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.User: select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:50.819 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Category
[DEBUG] 2021-05-04 17:30:50.819 [main] AbstractEntityPersister -  Version select: select id from category where id =?
[DEBUG] 2021-05-04 17:30:50.819 [main] AbstractEntityPersister -  Snapshot select: select category_.id, category_.category_description as category2_0_, category_.category_name as category3_0_, category_.color as color4_0_, category_.user_id as user_id5_0_ from category category_ where category_.id=?
[DEBUG] 2021-05-04 17:30:50.819 [main] AbstractEntityPersister -  Insert 0: insert into category (category_description, category_name, color, user_id, id) values (?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:50.819 [main] AbstractEntityPersister -  Update 0: update category set category_description=?, category_name=?, color=?, user_id=? where id=?
[DEBUG] 2021-05-04 17:30:50.819 [main] AbstractEntityPersister -  Delete 0: delete from category where id=?
[DEBUG] 2021-05-04 17:30:50.819 [main] AbstractEntityPersister -  Identity insert: insert into category (category_description, category_name, color, user_id) values (?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:50.819 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11c581a0]
[DEBUG] 2021-05-04 17:30:50.819 [main] MetamodelGraphWalker - Visiting attribute path : categoryDescription
[DEBUG] 2021-05-04 17:30:50.819 [main] MetamodelGraphWalker - Visiting attribute path : categoryName
[DEBUG] 2021-05-04 17:30:50.819 [main] MetamodelGraphWalker - Visiting attribute path : color
[DEBUG] 2021-05-04 17:30:50.820 [main] MetamodelGraphWalker - Visiting attribute path : userId
[DEBUG] 2021-05-04 17:30:50.823 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@289f15e9]
[DEBUG] 2021-05-04 17:30:50.825 [main] MetamodelGraphWalker - Visiting attribute path : userId.birthdate
[DEBUG] 2021-05-04 17:30:50.826 [main] MetamodelGraphWalker - Visiting attribute path : userId.email
[DEBUG] 2021-05-04 17:30:50.827 [main] MetamodelGraphWalker - Visiting attribute path : userId.firstName
[DEBUG] 2021-05-04 17:30:50.827 [main] MetamodelGraphWalker - Visiting attribute path : userId.lastName
[DEBUG] 2021-05-04 17:30:50.827 [main] MetamodelGraphWalker - Visiting attribute path : userId.password
[DEBUG] 2021-05-04 17:30:50.827 [main] MetamodelGraphWalker - Visiting attribute path : userId.userName
[DEBUG] 2021-05-04 17:30:50.828 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-04 17:30:50.828 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-04 17:30:50.828 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Category)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Category, querySpaceUid=<gen:0>, path=edu.matc.entity.Category)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Category.userId)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Category)
          - SQL table alias mapping - category0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(userId)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2021-05-04 17:30:50.828 [main] EntityLoader - Static select for entity edu.matc.entity.Category [NONE]: select category0_.id as id1_0_0_, category0_.category_description as category2_0_0_, category0_.category_name as category3_0_0_, category0_.color as color4_0_0_, category0_.user_id as user_id5_0_0_, user1_.id as id1_2_1_, user1_.birthdate as birthdat2_2_1_, user1_.email as email3_2_1_, user1_.first_name as first_na4_2_1_, user1_.last_name as last_nam5_2_1_, user1_.password as password6_2_1_, user1_.username as username7_2_1_ from category category0_ left outer join user user1_ on category0_.user_id=user1_.id where category0_.id=?
[DEBUG] 2021-05-04 17:30:50.828 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5175d9ad]
[DEBUG] 2021-05-04 17:30:50.829 [main] MetamodelGraphWalker - Visiting attribute path : categoryDescription
[DEBUG] 2021-05-04 17:30:50.829 [main] MetamodelGraphWalker - Visiting attribute path : categoryName
[DEBUG] 2021-05-04 17:30:50.829 [main] MetamodelGraphWalker - Visiting attribute path : color
[DEBUG] 2021-05-04 17:30:50.829 [main] MetamodelGraphWalker - Visiting attribute path : userId
[DEBUG] 2021-05-04 17:30:50.829 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a5c8e]
[DEBUG] 2021-05-04 17:30:50.829 [main] MetamodelGraphWalker - Visiting attribute path : userId.birthdate
[DEBUG] 2021-05-04 17:30:50.829 [main] MetamodelGraphWalker - Visiting attribute path : userId.email
[DEBUG] 2021-05-04 17:30:50.840 [main] MetamodelGraphWalker - Visiting attribute path : userId.firstName
[DEBUG] 2021-05-04 17:30:50.840 [main] MetamodelGraphWalker - Visiting attribute path : userId.lastName
[DEBUG] 2021-05-04 17:30:50.840 [main] MetamodelGraphWalker - Visiting attribute path : userId.password
[DEBUG] 2021-05-04 17:30:50.840 [main] MetamodelGraphWalker - Visiting attribute path : userId.userName
[DEBUG] 2021-05-04 17:30:50.840 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-04 17:30:50.840 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-04 17:30:50.841 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Category)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Category, querySpaceUid=<gen:0>, path=edu.matc.entity.Category)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:1>, path=edu.matc.entity.Category.userId)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Category)
          - SQL table alias mapping - category0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(userId)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}

[DEBUG] 2021-05-04 17:30:50.841 [main] EntityLoader - Static select for entity edu.matc.entity.Category [READ]: select category0_.id as id1_0_0_, category0_.category_description as category2_0_0_, category0_.category_name as category3_0_0_, category0_.color as color4_0_0_, category0_.user_id as user_id5_0_0_, user1_.id as id1_2_1_, user1_.birthdate as birthdat2_2_1_, user1_.email as email3_2_1_, user1_.first_name as first_na4_2_1_, user1_.last_name as last_nam5_2_1_, user1_.password as password6_2_1_, user1_.username as username7_2_1_ from category category0_ left outer join user user1_ on category0_.user_id=user1_.id where category0_.id=?
[DEBUG] 2021-05-04 17:30:50.841 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Category: select category0_.id as id1_0_0_, category0_.category_description as category2_0_0_, category0_.category_name as category3_0_0_, category0_.color as color4_0_0_, category0_.user_id as user_id5_0_0_ from category category0_ where category0_.id=?
[DEBUG] 2021-05-04 17:30:50.841 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Category: select category0_.id as id1_0_0_, category0_.category_description as category2_0_0_, category0_.category_name as category3_0_0_, category0_.color as color4_0_0_, category0_.user_id as user_id5_0_0_ from category category0_ where category0_.id=?
[DEBUG] 2021-05-04 17:30:50.845 [main] AbstractEntityPersister - Static SQL for entity: edu.matc.entity.Entry
[DEBUG] 2021-05-04 17:30:50.846 [main] AbstractEntityPersister -  Version select: select id from entry where id =?
[DEBUG] 2021-05-04 17:30:50.846 [main] AbstractEntityPersister -  Snapshot select: select entry_.id, entry_.category_id as category6_1_, entry_.date as date2_1_, entry_.entry_name as entry_na3_1_, entry_.entry_type as entry_ty4_1_, entry_.user_id as user_id7_1_, entry_.value as value5_1_ from entry entry_ where entry_.id=?
[DEBUG] 2021-05-04 17:30:50.846 [main] AbstractEntityPersister -  Insert 0: insert into entry (category_id, date, entry_name, entry_type, user_id, value, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:50.846 [main] AbstractEntityPersister -  Update 0: update entry set category_id=?, date=?, entry_name=?, entry_type=?, user_id=?, value=? where id=?
[DEBUG] 2021-05-04 17:30:50.846 [main] AbstractEntityPersister -  Delete 0: delete from entry where id=?
[DEBUG] 2021-05-04 17:30:50.846 [main] AbstractEntityPersister -  Identity insert: insert into entry (category_id, date, entry_name, entry_type, user_id, value) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:50.846 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7911cc15]
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId
[DEBUG] 2021-05-04 17:30:50.846 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14e750c5]
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.categoryDescription
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.categoryName
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.color
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId
[DEBUG] 2021-05-04 17:30:50.846 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5329f6b3]
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.birthdate
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.email
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.firstName
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.lastName
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.password
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.userName
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : entryName
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : entryType
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : userId
[DEBUG] 2021-05-04 17:30:50.846 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77324a58]
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : userId.birthdate
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : userId.email
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : userId.firstName
[DEBUG] 2021-05-04 17:30:50.846 [main] MetamodelGraphWalker - Visiting attribute path : userId.lastName
[DEBUG] 2021-05-04 17:30:50.847 [main] MetamodelGraphWalker - Visiting attribute path : userId.password
[DEBUG] 2021-05-04 17:30:50.847 [main] MetamodelGraphWalker - Visiting attribute path : userId.userName
[DEBUG] 2021-05-04 17:30:50.847 [main] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2021-05-04 17:30:50.847 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-04 17:30:50.847 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-04 17:30:50.850 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Entry)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Entry, querySpaceUid=<gen:0>, path=edu.matc.entity.Entry)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.Category, querySpaceUid=<gen:1>, path=edu.matc.entity.Entry.categoryId)
             - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:2>, path=edu.matc.entity.Entry.categoryId.userId)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:3>, path=edu.matc.entity.Entry.userId)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Entry)
          - SQL table alias mapping - entry0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(categoryId)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Category)
                - SQL table alias mapping - category1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(userId)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(userId)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-04 17:30:50.850 [main] EntityLoader - Static select for entity edu.matc.entity.Entry [NONE]: select entry0_.id as id1_1_0_, entry0_.category_id as category6_1_0_, entry0_.date as date2_1_0_, entry0_.entry_name as entry_na3_1_0_, entry0_.entry_type as entry_ty4_1_0_, entry0_.user_id as user_id7_1_0_, entry0_.value as value5_1_0_, category1_.id as id1_0_1_, category1_.category_description as category2_0_1_, category1_.category_name as category3_0_1_, category1_.color as color4_0_1_, category1_.user_id as user_id5_0_1_, user2_.id as id1_2_2_, user2_.birthdate as birthdat2_2_2_, user2_.email as email3_2_2_, user2_.first_name as first_na4_2_2_, user2_.last_name as last_nam5_2_2_, user2_.password as password6_2_2_, user2_.username as username7_2_2_, user3_.id as id1_2_3_, user3_.birthdate as birthdat2_2_3_, user3_.email as email3_2_3_, user3_.first_name as first_na4_2_3_, user3_.last_name as last_nam5_2_3_, user3_.password as password6_2_3_, user3_.username as username7_2_3_ from entry entry0_ left outer join category category1_ on entry0_.category_id=category1_.id left outer join user user2_ on category1_.user_id=user2_.id left outer join user user3_ on entry0_.user_id=user3_.id where entry0_.id=?
[DEBUG] 2021-05-04 17:30:50.850 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@307cf964]
[DEBUG] 2021-05-04 17:30:50.850 [main] MetamodelGraphWalker - Visiting attribute path : categoryId
[DEBUG] 2021-05-04 17:30:50.850 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66713605]
[DEBUG] 2021-05-04 17:30:50.851 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.categoryDescription
[DEBUG] 2021-05-04 17:30:50.851 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.categoryName
[DEBUG] 2021-05-04 17:30:50.851 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.color
[DEBUG] 2021-05-04 17:30:50.851 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId
[DEBUG] 2021-05-04 17:30:50.851 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d50f2a8]
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.birthdate
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.email
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.firstName
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.lastName
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.password
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : categoryId.userId.userName
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : date
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : entryName
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : entryType
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : userId
[DEBUG] 2021-05-04 17:30:50.853 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37ca3ca8]
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : userId.birthdate
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : userId.email
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : userId.firstName
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : userId.lastName
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : userId.password
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : userId.userName
[DEBUG] 2021-05-04 17:30:50.853 [main] MetamodelGraphWalker - Visiting attribute path : value
[DEBUG] 2021-05-04 17:30:50.853 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-05-04 17:30:50.853 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-05-04 17:30:50.854 [main] LoadPlanTreePrinter - LoadPlan(entity=edu.matc.entity.Entry)
    - Returns
       - EntityReturnImpl(entity=edu.matc.entity.Entry, querySpaceUid=<gen:0>, path=edu.matc.entity.Entry)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.Category, querySpaceUid=<gen:1>, path=edu.matc.entity.Entry.categoryId)
             - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:2>, path=edu.matc.entity.Entry.categoryId.userId)
          - EntityAttributeFetchImpl(entity=edu.matc.entity.User, querySpaceUid=<gen:3>, path=edu.matc.entity.Entry.userId)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=edu.matc.entity.Entry)
          - SQL table alias mapping - entry0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(categoryId)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=edu.matc.entity.Category)
                - SQL table alias mapping - category1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(userId)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=edu.matc.entity.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}
          - JOIN (JoinDefinedByMetadata(userId)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=edu.matc.entity.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

[DEBUG] 2021-05-04 17:30:50.854 [main] EntityLoader - Static select for entity edu.matc.entity.Entry [READ]: select entry0_.id as id1_1_0_, entry0_.category_id as category6_1_0_, entry0_.date as date2_1_0_, entry0_.entry_name as entry_na3_1_0_, entry0_.entry_type as entry_ty4_1_0_, entry0_.user_id as user_id7_1_0_, entry0_.value as value5_1_0_, category1_.id as id1_0_1_, category1_.category_description as category2_0_1_, category1_.category_name as category3_0_1_, category1_.color as color4_0_1_, category1_.user_id as user_id5_0_1_, user2_.id as id1_2_2_, user2_.birthdate as birthdat2_2_2_, user2_.email as email3_2_2_, user2_.first_name as first_na4_2_2_, user2_.last_name as last_nam5_2_2_, user2_.password as password6_2_2_, user2_.username as username7_2_2_, user3_.id as id1_2_3_, user3_.birthdate as birthdat2_2_3_, user3_.email as email3_2_3_, user3_.first_name as first_na4_2_3_, user3_.last_name as last_nam5_2_3_, user3_.password as password6_2_3_, user3_.username as username7_2_3_ from entry entry0_ left outer join category category1_ on entry0_.category_id=category1_.id left outer join user user2_ on category1_.user_id=user2_.id left outer join user user3_ on entry0_.user_id=user3_.id where entry0_.id=?
[DEBUG] 2021-05-04 17:30:50.854 [main] Loader - Static select for action ACTION_MERGE on entity edu.matc.entity.Entry: select entry0_.id as id1_1_0_, entry0_.category_id as category6_1_0_, entry0_.date as date2_1_0_, entry0_.entry_name as entry_na3_1_0_, entry0_.entry_type as entry_ty4_1_0_, entry0_.user_id as user_id7_1_0_, entry0_.value as value5_1_0_ from entry entry0_ where entry0_.id=?
[DEBUG] 2021-05-04 17:30:50.854 [main] Loader - Static select for action ACTION_REFRESH on entity edu.matc.entity.Entry: select entry0_.id as id1_1_0_, entry0_.category_id as category6_1_0_, entry0_.date as date2_1_0_, entry0_.entry_name as entry_na3_1_0_, entry0_.entry_type as entry_ty4_1_0_, entry0_.user_id as user_id7_1_0_, entry0_.value as value5_1_0_ from entry entry0_ where entry0_.id=?
[DEBUG] 2021-05-04 17:30:50.883 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-05-04 17:30:50.884 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-05-04 17:30:50.884 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-05-04 17:30:50.888 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-05-04 17:30:50.888 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-05-04 17:30:50.888 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-05-04 17:30:50.888 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-05-04 17:30:50.890 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1282e98
[DEBUG] 2021-05-04 17:30:50.891 [main] SessionFactoryRegistry - Registering SessionFactory: 32e92936-2d1c-479f-9637-a69e1db2bca8 (<unnamed>)
[DEBUG] 2021-05-04 17:30:50.892 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-05-04 17:30:50.971 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-05-04 17:30:50.986 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:51.008 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:51.009 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:51.017 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2021-05-04 17:30:51.018 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-02-13
[DEBUG] 2021-05-04 17:30:51.018 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.018 [main] TwoPhaseLoad - Processing attribute `email` : value = miracletiti@gmail.com
[DEBUG] 2021-05-04 17:30:51.018 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.018 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Miracle
[DEBUG] 2021-05-04 17:30:51.018 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.018 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Tianna
[DEBUG] 2021-05-04 17:30:51.018 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.028 [main] TwoPhaseLoad - Processing attribute `password` : value = p098
[DEBUG] 2021-05-04 17:30:51.028 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.028 [main] TwoPhaseLoad - Processing attribute `userName` : value = miraclet0909
[DEBUG] 2021-05-04 17:30:51.028 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.029 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2021-05-04 17:30:51.029 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.029 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#2
[DEBUG] 2021-05-04 17:30:51.030 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.035 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-04 17:30:51.035 [main] TransactionImpl - begin
[DEBUG] 2021-05-04 17:30:51.049 [main] TransactionImpl - committing
[DEBUG] 2021-05-04 17:30:51.050 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-04 17:30:51.050 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-04 17:30:51.053 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-05-04 17:30:51.053 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-04 17:30:51.053 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-05-04 17:30:51.054 [main] EntityPrinter - edu.matc.entity.User{firstName=Miracle, lastName=Tianna, password=p098, birthdate=1995-02-13, id=2, userName=miraclet0909, email=miracletiti@gmail.com}
[DEBUG] 2021-05-04 17:30:51.059 [main] SQL - delete from user where id=?
[DEBUG] 2021-05-04 17:30:51.070 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.071 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.071 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-05-04 17:30:51.071 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:51.072 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.073 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#2
[DEBUG] 2021-05-04 17:30:51.073 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.118 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-04 17:30:51.118 [main] TransactionImpl - begin
[DEBUG] 2021-05-04 17:30:51.122 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-04 17:30:51.123 [main] SQL - insert into user (birthdate, email, first_name, last_name, password, username) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:51.137 [main] IdentifierGeneratorHelper - Natively generated identity: 66
[DEBUG] 2021-05-04 17:30:51.137 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.140 [main] TransactionImpl - committing
[DEBUG] 2021-05-04 17:30:51.140 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-04 17:30:51.140 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-04 17:30:51.140 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-04 17:30:51.141 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-04 17:30:51.141 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-05-04 17:30:51.141 [main] EntityPrinter - edu.matc.entity.User{firstName=New, lastName=Guy, password=newguy, birthdate=2000-02-16, id=66, userName=NewGuy, email=newguy@some.com}
[DEBUG] 2021-05-04 17:30:51.142 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.142 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.142 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:51.145 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:51.145 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#66]
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.146 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#66]
[DEBUG] 2021-05-04 17:30:51.146 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.146 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#66
[DEBUG] 2021-05-04 17:30:51.146 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.210 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-04 17:30:51.210 [main] TransactionImpl - begin
[DEBUG] 2021-05-04 17:30:51.224 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-04 17:30:51.224 [main] SQL - insert into user (birthdate, email, first_name, last_name, password, username) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:51.227 [main] IdentifierGeneratorHelper - Natively generated identity: 67
[DEBUG] 2021-05-04 17:30:51.227 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.227 [main] TransactionImpl - committing
[DEBUG] 2021-05-04 17:30:51.227 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-04 17:30:51.227 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-04 17:30:51.227 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-04 17:30:51.227 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-04 17:30:51.227 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-05-04 17:30:51.227 [main] EntityPrinter - edu.matc.entity.User{firstName=New, lastName=Guy, password=newguy, birthdate=2000-02-16, id=67, userName=NewGuy, email=newguy@some.com}
[DEBUG] 2021-05-04 17:30:51.230 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.231 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.231 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:51.234 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:51.234 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#67]
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:51.237 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.238 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#67]
[DEBUG] 2021-05-04 17:30:51.238 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.238 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#67
[DEBUG] 2021-05-04 17:30:51.238 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.242 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-04 17:30:51.242 [main] TransactionImpl - begin
[DEBUG] 2021-05-04 17:30:51.273 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3f3c8b60
[DEBUG] 2021-05-04 17:30:51.319 [main] QueryTranslatorImpl - parse() - HQL: FROM edu.matc.entity.User WHERE userName = :username
[DEBUG] 2021-05-04 17:30:51.327 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.337 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'FROM'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'edu'
    |           |  |  \-[IDENT] Node: 'matc'
    |           |  \-[IDENT] Node: 'entity'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

[DEBUG] 2021-05-04 17:30:51.365 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.393 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (<no alias>) -> user0_
[DEBUG] 2021-05-04 17:30:51.397 [main] FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
[DEBUG] 2021-05-04 17:30:51.398 [main] DotNode - getDataType() : userName -> org.hibernate.type.StringType@6c42f2a1
[DEBUG] 2021-05-04 17:30:51.398 [main] FromReferenceNode - Resolved : {synthetic-alias}.userName -> user0_.username
[DEBUG] 2021-05-04 17:30:51.403 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.403 [main] HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} user user0_ ) ( WHERE ( = ( user0_.username {synthetic-alias} userName ) ? ) ) )
[DEBUG] 2021-05-04 17:30:51.408 [main] HqlSqlWalker - Derived SELECT clause created.
[DEBUG] 2021-05-04 17:30:51.415 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-04 17:30:51.415 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.425 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.id as id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path={synthetic-alias}.userName,tableAlias=user0_,className=edu.matc.entity.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@6c42f2a1}

[DEBUG] 2021-05-04 17:30:51.425 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.432 [main] QueryTranslatorImpl - HQL: FROM edu.matc.entity.User WHERE userName = :username
[DEBUG] 2021-05-04 17:30:51.432 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_ where user0_.username=?
[DEBUG] 2021-05-04 17:30:51.432 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.445 [main] SQL - select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_ where user0_.username=?
[DEBUG] 2021-05-04 17:30:51.449 [main] Loader - Result set row: 0
[DEBUG] 2021-05-04 17:30:51.451 [main] Loader - Result row: EntityKey[edu.matc.entity.User#67]
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#67]
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.451 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#67]
[DEBUG] 2021-05-04 17:30:51.508 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:51.510 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:51.510 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1987-03-21
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Processing attribute `email` : value = kingjones999@gmail.com
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Mike
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jones
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Processing attribute `password` : value = yoyojojo123
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Processing attribute `userName` : value = mikeyjones123
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.511 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.511 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.511 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2021-05-04 17:30:51.511 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.522 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-04 17:30:51.522 [main] TransactionImpl - begin
[DEBUG] 2021-05-04 17:30:51.528 [main] TransactionImpl - committing
[DEBUG] 2021-05-04 17:30:51.528 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-04 17:30:51.528 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-04 17:30:51.528 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-04 17:30:51.528 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-04 17:30:51.528 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-05-04 17:30:51.532 [main] EntityPrinter - edu.matc.entity.User{firstName=Harry, lastName=Jones, password=yoyojojo123, birthdate=1987-03-21, id=1, userName=mikeyjones123, email=kingjones999@gmail.com}
[DEBUG] 2021-05-04 17:30:51.532 [main] SQL - update user set birthdate=?, email=?, first_name=?, last_name=?, password=?, username=? where id=?
[DEBUG] 2021-05-04 17:30:51.540 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.542 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.546 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:51.550 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:51.550 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1987-03-21
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Processing attribute `email` : value = kingjones999@gmail.com
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Harry
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jones
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Processing attribute `password` : value = yoyojojo123
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Processing attribute `userName` : value = mikeyjones123
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.551 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.551 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.552 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#1
[DEBUG] 2021-05-04 17:30:51.552 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.643 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2021-05-04 17:30:51.647 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2021-05-04 17:30:51.648 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.648 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'edu'
       |     |  |  |  \-[IDENT] Node: 'matc'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-05-04 17:30:51.648 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.648 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-04 17:30:51.649 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-04 17:30:51.649 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.649 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) )
[DEBUG] 2021-05-04 17:30:51.649 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-04 17:30:51.649 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.649 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}

[DEBUG] 2021-05-04 17:30:51.649 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.649 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0
[DEBUG] 2021-05-04 17:30:51.649 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_
[DEBUG] 2021-05-04 17:30:51.649 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.659 [main] SQL - select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_
[DEBUG] 2021-05-04 17:30:51.662 [main] Loader - Result set row: 0
[DEBUG] 2021-05-04 17:30:51.662 [main] Loader - Result row: EntityKey[edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.662 [main] Loader - Result set row: 1
[DEBUG] 2021-05-04 17:30:51.662 [main] Loader - Result row: EntityKey[edu.matc.entity.User#2]
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1987-03-21
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `email` : value = kingjones999@gmail.com
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Mike
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jones
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `password` : value = yoyojojo123
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `userName` : value = mikeyjones123
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#2]
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1995-02-13
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `email` : value = miracletiti@gmail.com
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Miracle
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Tianna
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `password` : value = p098
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Processing attribute `userName` : value = miraclet0909
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.664 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#2]
[DEBUG] 2021-05-04 17:30:51.667 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.741 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-04 17:30:51.743 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-04 17:30:51.745 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.745 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-05-04 17:30:51.745 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.746 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-04 17:30:51.746 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-04 17:30:51.748 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-04 17:30:51.748 [main] DotNode - getDataType() : userName -> org.hibernate.type.StringType@6c42f2a1
[DEBUG] 2021-05-04 17:30:51.748 [main] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.username
[DEBUG] 2021-05-04 17:30:51.748 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.748 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( = ( user0_.username user0_.id userName ) ? ) ) )
[DEBUG] 2021-05-04 17:30:51.748 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-04 17:30:51.748 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.748 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=edu.matc.entity.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6c42f2a1}

[DEBUG] 2021-05-04 17:30:51.748 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.748 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-04 17:30:51.748 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_ where user0_.username=?
[DEBUG] 2021-05-04 17:30:51.748 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.749 [main] SQL - select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_ where user0_.username=?
[DEBUG] 2021-05-04 17:30:51.751 [main] Loader - Result set row: 0
[DEBUG] 2021-05-04 17:30:51.751 [main] Loader - Result row: EntityKey[edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1987-03-21
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Processing attribute `email` : value = kingjones999@gmail.com
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Mike
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jones
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Processing attribute `password` : value = yoyojojo123
[DEBUG] 2021-05-04 17:30:51.756 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.757 [main] TwoPhaseLoad - Processing attribute `userName` : value = mikeyjones123
[DEBUG] 2021-05-04 17:30:51.757 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.757 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.757 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.839 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where ( generatedAlias0.userName=:param0 ) and ( generatedAlias0.id=1 )
[DEBUG] 2021-05-04 17:30:51.839 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where ( generatedAlias0.userName=:param0 ) and ( generatedAlias0.id=1 )
[DEBUG] 2021-05-04 17:30:51.846 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.847 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'edu'
    |  |     |  |  |  \-[IDENT] Node: 'matc'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'userName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'id'
             \-[NUM_INT] Node: '1'

[DEBUG] 2021-05-04 17:30:51.847 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.847 [main] FromElement - FromClause{level=1} : edu.matc.entity.User (generatedAlias0) -> user0_
[DEBUG] 2021-05-04 17:30:51.847 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-04 17:30:51.847 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-04 17:30:51.847 [main] DotNode - getDataType() : userName -> org.hibernate.type.StringType@6c42f2a1
[DEBUG] 2021-05-04 17:30:51.847 [main] FromReferenceNode - Resolved : generatedAlias0.userName -> user0_.username
[DEBUG] 2021-05-04 17:30:51.847 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.id
[DEBUG] 2021-05-04 17:30:51.847 [main] DotNode - getDataType() : id -> org.hibernate.type.IntegerType@639aba11
[DEBUG] 2021-05-04 17:30:51.847 [main] FromReferenceNode - Resolved : generatedAlias0.id -> user0_.id
[DEBUG] 2021-05-04 17:30:51.851 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.851 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} user user0_ ) ( where ( and ( = ( user0_.username user0_.id userName ) ? ) ( = ( user0_.id user0_.id id ) 1 ) ) ) )
[DEBUG] 2021-05-04 17:30:51.851 [main] JoinProcessor - Using FROM fragment [user user0_]
[DEBUG] 2021-05-04 17:30:51.852 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-05-04 17:30:51.856 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_2_' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=edu.matc.entity.User}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'user0_.username' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=generatedAlias0.userName,tableAlias=user0_,className=edu.matc.entity.User,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
          |  |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6c42f2a1}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'user0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=generatedAlias0.id,tableAlias=user0_,className=edu.matc.entity.User,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=generatedAlias0, className=edu.matc.entity.User, tableAlias=user0_}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[NUM_INT] LiteralNode: '1'

[DEBUG] 2021-05-04 17:30:51.856 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.856 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from edu.matc.entity.User as generatedAlias0 where ( generatedAlias0.userName=:param0 ) and ( generatedAlias0.id=1 )
[DEBUG] 2021-05-04 17:30:51.856 [main] QueryTranslatorImpl - SQL: select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_ where user0_.username=? and user0_.id=1
[DEBUG] 2021-05-04 17:30:51.856 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-05-04 17:30:51.856 [main] SQL - select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_ where user0_.username=? and user0_.id=1
[DEBUG] 2021-05-04 17:30:51.860 [main] Loader - Result set row: 0
[DEBUG] 2021-05-04 17:30:51.860 [main] Loader - Result row: EntityKey[edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 1987-03-21
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Processing attribute `email` : value = kingjones999@gmail.com
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Mike
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Jones
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Processing attribute `password` : value = yoyojojo123
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Processing attribute `userName` : value = mikeyjones123
[DEBUG] 2021-05-04 17:30:51.860 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.861 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#1]
[DEBUG] 2021-05-04 17:30:51.865 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.915 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-04 17:30:51.915 [main] TransactionImpl - begin
[DEBUG] 2021-05-04 17:30:51.918 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-04 17:30:51.918 [main] SQL - insert into user (birthdate, email, first_name, last_name, password, username) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:51.919 [main] IdentifierGeneratorHelper - Natively generated identity: 68
[DEBUG] 2021-05-04 17:30:51.919 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.920 [main] TransactionImpl - committing
[DEBUG] 2021-05-04 17:30:51.928 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-04 17:30:51.928 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-04 17:30:51.929 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-04 17:30:51.929 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-04 17:30:51.929 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-05-04 17:30:51.929 [main] EntityPrinter - edu.matc.entity.User{firstName=New, lastName=Guy, password=newguy, birthdate=2000-02-16, id=68, userName=NewGuy, email=newguy@some.com}
[DEBUG] 2021-05-04 17:30:51.931 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.932 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.933 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:51.936 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:51.936 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#68]
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.936 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#68]
[DEBUG] 2021-05-04 17:30:51.936 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:51.938 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#68
[DEBUG] 2021-05-04 17:30:51.938 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:51.940 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-04 17:30:51.940 [main] SQL - select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_ where user0_.username=?
[DEBUG] 2021-05-04 17:30:51.944 [main] Loader - Result set row: 0
[DEBUG] 2021-05-04 17:30:51.945 [main] Loader - Result row: EntityKey[edu.matc.entity.User#68]
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#68]
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:51.947 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#68]
[DEBUG] 2021-05-04 17:30:51.948 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.014 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-04 17:30:52.014 [main] TransactionImpl - begin
[DEBUG] 2021-05-04 17:30:52.025 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-04 17:30:52.025 [main] SQL - insert into user (birthdate, email, first_name, last_name, password, username) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:52.028 [main] IdentifierGeneratorHelper - Natively generated identity: 69
[DEBUG] 2021-05-04 17:30:52.028 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:52.028 [main] TransactionImpl - committing
[DEBUG] 2021-05-04 17:30:52.028 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-04 17:30:52.028 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-04 17:30:52.028 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-04 17:30:52.028 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-04 17:30:52.028 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-05-04 17:30:52.029 [main] EntityPrinter - edu.matc.entity.User{firstName=New, lastName=Guy, password=newguy, birthdate=2000-02-16, id=69, userName=NewGuy, email=newguy@some.com}
[DEBUG] 2021-05-04 17:30:52.031 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.031 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.031 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:52.034 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:52.034 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#69]
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.035 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#69]
[DEBUG] 2021-05-04 17:30:52.035 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:52.036 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#69
[DEBUG] 2021-05-04 17:30:52.036 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.110 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-04 17:30:52.110 [main] TransactionImpl - begin
[DEBUG] 2021-05-04 17:30:52.111 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-04 17:30:52.111 [main] SQL - insert into user (birthdate, email, first_name, last_name, password, username) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:52.114 [main] IdentifierGeneratorHelper - Natively generated identity: 70
[DEBUG] 2021-05-04 17:30:52.114 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:52.114 [main] TransactionImpl - committing
[DEBUG] 2021-05-04 17:30:52.114 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-04 17:30:52.114 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-04 17:30:52.114 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-04 17:30:52.114 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-04 17:30:52.114 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-05-04 17:30:52.114 [main] EntityPrinter - edu.matc.entity.User{firstName=New, lastName=Guy, password=newguy, birthdate=2000-02-16, id=70, userName=NewGuy, email=newguy@some.com}
[DEBUG] 2021-05-04 17:30:52.118 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.119 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.119 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:52.122 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:52.123 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#70]
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.124 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#70]
[DEBUG] 2021-05-04 17:30:52.124 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:52.124 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#70
[DEBUG] 2021-05-04 17:30:52.124 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.125 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userName=:param0
[DEBUG] 2021-05-04 17:30:52.127 [main] SQL - select user0_.id as id1_2_, user0_.birthdate as birthdat2_2_, user0_.email as email3_2_, user0_.first_name as first_na4_2_, user0_.last_name as last_nam5_2_, user0_.password as password6_2_, user0_.username as username7_2_ from user user0_ where user0_.username=?
[DEBUG] 2021-05-04 17:30:52.129 [main] Loader - Result set row: 0
[DEBUG] 2021-05-04 17:30:52.129 [main] Loader - Result row: EntityKey[edu.matc.entity.User#70]
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#70]
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.130 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#70]
[DEBUG] 2021-05-04 17:30:52.131 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.133 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:52.136 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:52.136 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#70]
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:52.136 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.137 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#70]
[DEBUG] 2021-05-04 17:30:52.137 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:52.137 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#70
[DEBUG] 2021-05-04 17:30:52.137 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.189 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-05-04 17:30:52.189 [main] TransactionImpl - begin
[DEBUG] 2021-05-04 17:30:52.194 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-05-04 17:30:52.194 [main] SQL - insert into user (birthdate, email, first_name, last_name, password, username) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-05-04 17:30:52.201 [main] IdentifierGeneratorHelper - Natively generated identity: 71
[DEBUG] 2021-05-04 17:30:52.201 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:52.201 [main] TransactionImpl - committing
[DEBUG] 2021-05-04 17:30:52.201 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-05-04 17:30:52.201 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-05-04 17:30:52.201 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-05-04 17:30:52.201 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-05-04 17:30:52.201 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-05-04 17:30:52.201 [main] EntityPrinter - edu.matc.entity.User{firstName=New, lastName=Guy, password=newguy, birthdate=2000-02-16, id=71, userName=NewGuy, email=newguy@some.com}
[DEBUG] 2021-05-04 17:30:52.207 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.207 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-05-04 17:30:52.210 [main] SQL - select user0_.id as id1_2_0_, user0_.birthdate as birthdat2_2_0_, user0_.email as email3_2_0_, user0_.first_name as first_na4_2_0_, user0_.last_name as last_nam5_2_0_, user0_.password as password6_2_0_, user0_.username as username7_2_0_ from user user0_ where user0_.id=?
[DEBUG] 2021-05-04 17:30:52.213 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-05-04 17:30:52.213 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Resolving attributes for [edu.matc.entity.User#71]
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Processing attribute `birthdate` : value = 2000-02-16
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Attribute (`birthdate`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Processing attribute `email` : value = newguy@some.com
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Attribute (`email`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Processing attribute `firstName` : value = New
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Guy
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Processing attribute `password` : value = newguy
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Processing attribute `userName` : value = NewGuy
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-05-04 17:30:52.213 [main] TwoPhaseLoad - Done materializing entity [edu.matc.entity.User#71]
[DEBUG] 2021-05-04 17:30:52.213 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-05-04 17:30:52.214 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : edu.matc.entity.User#71
[DEBUG] 2021-05-04 17:30:52.214 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
